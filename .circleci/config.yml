# version: 2
# jobs:
#   build:
#     # Variable expansion in working_directory not supported at this time
#     # You will need to modify the code below to reflect your github account/repo setup
#     working_directory: /go/src/github.com/testinguser883/deployer
#     docker:
#       - image: circleci/golang:1.10.1
#     environment:
#       GO15VENDOREXPERIMENT: 1
#     branches:
#       only:
#         - master
#     steps:
#       - checkout
#       - setup_remote_docker

#       - run: echo 'export GOPATH_HEAD="$(echo ${GOPATH}|cut -d ':' -f 1)"' >> $BASH_ENV
#       - run: echo 'export GOPATH_BASE="${GOPATH_HEAD}/src/github.com/${CIRCLE_PROJECT_USERNAME}"' >> $BASH_ENV
#       - run: echo 'export DOCKER_REPO="$(if [ ${CIRCLE_PROJECT_USERNAME} == 'testinguser883' ]; then echo testinguser883; else echo $DOCKER_USER; fi)"' >> $BASH_ENV
#       - run: mkdir -p "${GOPATH_BASE}"
#       - run: mkdir -p "${GOPATH_HEAD}/bin"
#       - run: go get github.com/govend/govend
#       - run: env
#       # - run: echo ${GOPATH_HEAD}
#       - run: go get -v -d ./...
#       # - run: go test -v ./...

#       - run:
#           name: Build application container
#           command: |
#             # go install --ldflags '-extldflags "-static"' github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME};
#             [ ! -e bin ] && mkdir bin;
#             go build --ldflags '-extldflags "-static"' -o bin/invoicer .;
#             # cp "${GOPATH_HEAD}/bin/${CIRCLE_PROJECT_REPONAME}" bin/invoicer;
#             docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .;
            

#       - run:
#           name: Run application in background
#           command: |
#             docker run --name webapp -d ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME};
#           background: true


# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    working_directory: /go/src/github.com/testinguser883/deployer
    docker:
      - image: circleci/golang:1.9
    environment:
      GO15VENDOREXPERIMENT: 1
    branches:
      only:
        - master
    steps:
      - checkout
      - setup_remote_docker

      - run: echo 'export GOPATH_HEAD="$(echo ${GOPATH}|cut -d ':' -f 1)"' >> $BASH_ENV
      - run: echo 'export GOPATH_BASE="${GOPATH_HEAD}/src/github.com/${CIRCLE_PROJECT_USERNAME}"' >> $BASH_ENV
      - run: echo 'export DOCKER_REPO="$(if [ ${CIRCLE_PROJECT_USERNAME} == 'testinguser883' ]; then echo testinguser883; else echo $DOCKER_USER; fi)"' >> $BASH_ENV
      # - run: rm -rf ${GOPATH_BASE}/
      - run: mkdir -p "${GOPATH_BASE}"
      - run: mkdir -p "${GOPATH_HEAD}/bin"
      # - run: cp -r ${HOME}/${CIRCLE_PROJECT_REPONAME} ${GOPATH_BASE}/
      - run: go get github.com/govend/govend
      - run: sudo apt-get -y -qq update
      - run: sudo apt-get -y -qq install python3
      - run: curl -O https://bootstrap.pypa.io/get-pip.py
      - run: python3 get-pip.py --user
      - run: pip install awscli --upgrade --user
      - run: env

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ./...
      # - run: go test -v ./...

      - run:
          name: Test module
          command: |
            [ ! -e bin ] && mkdir bin;
            go build --ldflags '-extldflags "-static"' -o bin/deployer .;
            chmod +x deploymentTests/*;
            docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .;
      
      - run:
          name: Deployment module
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                docker login -u ${DOCKER_USER} -p ${DOCKER_PASS};
                echo ${DOCKER_USER}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_TAG};
                docker images --no-trunc | awk '/^app/ {print $3}';
                docker push ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME};
                aws elasticbeanstalk update-environment --region us-east-1 --application-name deployer201906300755 --environment-id e-qrq2fh3xcs --version-label deployer-api-deployer201906300755

                # go install --ldflags '-extldflags "-static"' github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME};
                # mkdir _bin;
                # cp "$GOPATH_HEAD/bin/${CIRCLE_PROJECT_REPONAME}" _bin/invoicer;
                # docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .;
                # docker images --no-trunc | awk '/^app/ {print $3}' | sudo tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt;
                # docker push ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME};
            fi


# machine:
#   environment:
#     GOPATH_HEAD: "$(echo $GOPATH | cut -d ':' -f 1)"
#     GOPATH_BASE: "$GOPATH_HEAD/src/github.com/$CIRCLE_PROJECT_USERNAME"
#     GO15VENDOREXPERIMENT: 1
#     DOCKER_REPO: "$(if [ $CIRCLE_PROJECT_USERNAME == 'testinguser883' ]; then echo testinguser883; else echo $DOCKER_USER; fi)"

#   services:
#     - docker

# dependencies:
#   override:
#     - rm -rf ${GOPATH_BASE}/
#     - mkdir -p "$GOPATH_BASE"
#     - mkdir -p "$GOPATH/bin"
#     - cp -r ${HOME}/${CIRCLE_PROJECT_REPONAME} ${GOPATH_BASE}/
#     - go get github.com/govend/govend
#     - go get -v -t -d ./...
#     - sudo pip install awscli

# test:
#   override:
#     - >
#         go test
#         github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
#     # Go applications in the busybox container must be built statically
#     - >
#         go install --ldflags '-extldflags "-static"'
#         github.com/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}
#     - '[ ! -e bin ] && mkdir bin'
#     - cp "$GOPATH_HEAD/bin/${CIRCLE_PROJECT_REPONAME}" bin/deployer
#     - chmod +x deploymentTests/*
#     - docker build -t ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME} .

#     # Run GOVEND to check if outdated dependencies are present
#     - 'GOPATH="$GOPATH_HEAD"; ( cd ${GOPATH_BASE}/${CIRCLE_PROJECT_REPONAME} && govend -u && git diff --quiet )'

# deployment:
#   hub_latest:
#     # appropriately tag and push the container to dockerhub
#     # only when on the master branch
#     branch: "master"
#     commands:
#       - >
#           docker login -e ${DOCKER_EMAIL}
#           -u ${DOCKER_USER} -p ${DOCKER_PASS}
#       # write the sha256 sum to an artifact to make image verification easier
#       - >
#         docker images --no-trunc | awk '/^app/ {print $3}' |
#         tee $CIRCLE_ARTIFACTS/docker-image-shasum256.txt
#       - docker push ${DOCKER_REPO}/${CIRCLE_PROJECT_REPONAME}

#       # trigger ebs redeploy
#       - aws elasticbeanstalk update-environment --region us-east-1 --application-name invoicer201707071231 --environment-id e-h4vyur8nup --version-label deployer-api
